Some things to remember about NASM assembly programming:
- Global _main and corresponding _main needed in every program
- Use extern to call functions from other files
- Datatypes:
    - BYTE  b (1 byte)
    - WORD  w (2 bytes)
    - DWORD d (4 bytes)
    - QWORD q (8 bytes)
- .data is used for initialize data
- .bss is used for uninitialized data
- Function calling
    - Push arguements in left to right order
    - Note of floating point numbers:
        - fld pushes number onto FPU stack
        - sub esp, 8 makes room on stack
        - fstp pops number from FPU stack
        - Return value stored in st(0) (Bottom of FPU stack)
    - Return value found in eax register (unless floating point)
    - ecx and edx also potentially clobbered. Remeber to save and restore when needed (ex. _printf and ecx)
- Linking and compiling
    - Not sure what -m32 flag does but remember that it exists
    - First compile NASM to .obj/.o output file
    - Use gcc to link these files into executable
- Arithmetic operations
    - mul: put first number into eax
    - div: put dividend into eax and clear edx (or you will get a wrong result)
